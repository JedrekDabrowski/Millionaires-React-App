{"version":3,"sources":["components/Header.js","img/money.jpg","components/GameContext.js","components/Result.js","components/Question.js","components/Scoreboard.js","components/Game.js","components/App.js","index.js"],"names":["Header","className","GameContext","createContext","question","answers","correctAnswer","gameResult","level","hasWon","hasEnded","nextQuestion","handleAnswer","handleNewGame","GameContextProvider","children","useState","setQuestion","setAnswers","setCorrectAnswer","setGameResult","fetch","then","result","ok","Error","json","data","results","incorrect_answers","map","ia","atob","push","correct_answer","useEffect","context","choosenAnswer","prevValue","Provider","value","Result","props","gameCtx","useContext","src","money","alt","onClick","Question","setChoosenAnswer","handleAnswerChange","e","target","sort","answer","id","name","preventDefault","Scoreboards","scoreArray","score","Game","GameCtx","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79a97bb1.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/Header.css';\r\nfunction Header() {\r\n  return (\r\n    <header className='Header'>\r\n      <h1>Millionaires</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/money.146a8ab1.jpg\";","import { createContext, useState, useEffect } from 'react';\r\nconst API =\r\n  'https://opentdb.com/api.php?amount=1&type=multiple&encode=base64&difficulty=easy';\r\n\r\nconst GameContext = createContext({\r\n  question: '',\r\n  answers: [],\r\n  correctAnswer: '',\r\n  gameResult: {\r\n    level: 1,\r\n    hasWon: false,\r\n    hasEnded: false,\r\n  },\r\n  nextQuestion: () => {},\r\n  handleAnswer: () => {},\r\n  handleNewGame: () => {},\r\n});\r\n\r\nexport function GameContextProvider({ children }) {\r\n  const [question, setQuestion] = useState('');\r\n  const [answers, setAnswers] = useState([]);\r\n  const [correctAnswer, setCorrectAnswer] = useState('');\r\n  const [gameResult, setGameResult] = useState({\r\n    level: 1,\r\n    hasWon: false,\r\n    hasEnded: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    nextQuestion();\r\n  }, []);\r\n\r\n  function nextQuestion() {\r\n    fetch(API)\r\n      .then((result) => {\r\n        if (result.ok) return result;\r\n        throw Error(\"Can't fetch data.\");\r\n      })\r\n      .then((result) => result.json())\r\n      .then((data) => {\r\n        let answers = data.results[0].incorrect_answers.map((ia) => atob(ia));\r\n        answers.push(atob(data.results[0].correct_answer));\r\n\r\n        const question = atob(data.results[0].question);\r\n        const correctAnswer = atob(data.results[0].correct_answer);\r\n        setQuestion(question);\r\n        setAnswers(answers);\r\n        setCorrectAnswer(correctAnswer);\r\n      });\r\n  }\r\n\r\n  function handleAnswer(choosenAnswer) {\r\n    if (choosenAnswer === correctAnswer) {\r\n      if (gameResult.level < 12) {\r\n        setGameResult((prevValue) => ({\r\n          ...prevValue,\r\n          level: prevValue.level + 1,\r\n        }));\r\n        nextQuestion();\r\n      } else {\r\n        setGameResult({\r\n          hasWon: true,\r\n          hasEnded: true,\r\n          level: 12,\r\n        });\r\n      }\r\n    } else {\r\n      setGameResult({\r\n        level: 1,\r\n        hasEnded: true,\r\n        hasWon: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleNewGame() {\r\n    setGameResult({\r\n      level: 1,\r\n      hasEnded: false,\r\n      hasWon: false,\r\n    });\r\n    nextQuestion();\r\n  }\r\n  const context = {\r\n    question,\r\n    answers,\r\n    correctAnswer,\r\n    gameResult,\r\n    nextQuestion,\r\n    handleAnswer,\r\n    handleNewGame,\r\n  };\r\n  return (\r\n    <GameContext.Provider value={context}>{children}</GameContext.Provider>\r\n  );\r\n}\r\n\r\nexport default GameContext;\r\n","import React, { useContext } from 'react';\r\nimport '../styles/Result.css';\r\nimport money from '../img/money.jpg';\r\nimport GameContext from './GameContext';\r\n\r\nfunction Result(props) {\r\n  const gameCtx = useContext(GameContext);\r\n  return (\r\n    <div>\r\n      {gameCtx.gameResult.hasWon ? (\r\n        <div className='won'>\r\n          <h1>You won!</h1>\r\n          <p>1 000 000 $</p>\r\n          <img className='money' src={money} alt='One million dollars' />\r\n          <button className='newGame' onClick={gameCtx.handleNewGame}>\r\n            Start New Game\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className='lose'>\r\n          <h1>You lose</h1>\r\n          <p>Maybe you'll have better luck next time!</p>\r\n          <p className='correct'>\r\n            Corect Answer was <span>{gameCtx.correctAnswer}</span>\r\n          </p>\r\n          <button className='newGame' onClick={gameCtx.handleNewGame}>\r\n            Start New Game\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Result;\r\n","import React, { useState, useContext } from 'react';\r\nimport '../styles/Question.css';\r\nimport GameContext from './GameContext';\r\nfunction Question(props) {\r\n  const [choosenAnswer, setChoosenAnswer] = useState('');\r\n  //props.answers zawiera zawsze dobra odpowiedz na koncu\r\n  //metoda sort pomiesza kolejnosć,a by uniknąć sytuacji, że poprawan odpowiedź jest zawsze w tym samym miejscu\r\n\r\n  const gameCtx = useContext(GameContext);\r\n\r\n  function handleAnswerChange(e) {\r\n    setChoosenAnswer(e.target.value);\r\n  }\r\n  function handleFinalAnswer(e) {\r\n    e.preventDefault();\r\n    gameCtx.handleAnswer(choosenAnswer);\r\n  }\r\n\r\n  let answers = gameCtx.answers.sort();\r\n\r\n  return (\r\n    <>\r\n      <h2>{gameCtx.question}</h2>\r\n      <div className='answers'>\r\n        {answers.map((answer, id) => (\r\n          <div key={id} className='answer'>\r\n            <button\r\n              name='answer'\r\n              value={answers[id]}\r\n              onClick={handleAnswerChange}\r\n              id={choosenAnswer === answers[id] ? 'choosen' : null}\r\n            >\r\n              {answers[id]}\r\n            </button>\r\n          </div>\r\n        ))}\r\n        <div className='final'>\r\n          <button className='final' onClick={handleFinalAnswer}>\r\n            Final Answer\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Question;\r\n","import React, { useContext } from 'react';\r\nimport '../styles/Scoreboard.css';\r\nimport GameContext from './GameContext';\r\nfunction Scoreboards(props) {\r\n  const scoreArray = [\r\n    '1 000 000',\r\n    '500 000',\r\n    '250 000',\r\n    '125 000',\r\n    '75 000',\r\n    '40 000',\r\n    '20 000',\r\n    '10 000',\r\n    '5000',\r\n    '2000',\r\n    '1000',\r\n    '500',\r\n  ];\r\n\r\n  const gameCtx = useContext(GameContext);\r\n  return (\r\n    <div>\r\n      {scoreArray.map((score, id) => (\r\n        <p\r\n          key={id}\r\n          className={\r\n            gameCtx.gameResult.level === 12 - id ? 'active score' : ' score'\r\n          }\r\n        >\r\n          {scoreArray[id]}\r\n        </p>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scoreboards;\r\n","import React, { useContext } from 'react';\r\nimport Result from './Result';\r\nimport Question from './Question';\r\nimport Scoreboard from './Scoreboard';\r\nimport GameContext from './GameContext';\r\nimport '../styles/Game.css';\r\n\r\nfunction Game() {\r\n  const GameCtx = useContext(GameContext);\r\n\r\n  return (\r\n    <div className='Game'>\r\n      <div className='main'>\r\n        {GameCtx.gameResult.hasEnded ? (\r\n          <div className='result'>\r\n            <Result />\r\n          </div>\r\n        ) : (\r\n          <div className='question'>\r\n            <Question />\r\n          </div>\r\n        )}\r\n        <aside className='Scoreboard'>\r\n          <Scoreboard />\r\n        </aside>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import '../styles/App.css';\nimport Header from './Header';\nimport Game from './Game';\nimport { GameContextProvider } from './GameContext';\nfunction App() {\n  return (\n    <GameContextProvider>\n      <div className='App'>\n        <Header />\n        <Game />\n      </div>\n    </GameContextProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}